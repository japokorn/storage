---
- hosts: all
  become: true
  vars:
    storage_safe_mode: false
    mount_location: '/opt/test1'
    volume_group_size: '10g'
    volume_size: '9g'
    logical_size: '20g'

  tasks:
    - include_role:
        name: linux-system-roles.storage

    - include_tasks: get_unused_disk.yml
      vars:
        min_size: "{{ volume_group_size }}"
        max_return: 1

    - name: Create LVM VDO volume under volume group 'pool1'
      include_role:
        name: linux-system-roles.storage
      vars:
        storage_pools:
          - name: pool1
            disks: "{{ unused_disks }}"
            vdo_compression: true
            vdo_deduplication: true
            vdo_logical_size: "{{ logical_size }}"
            volumes:
              - name: volume1
                size: "{{ volume_size }}"
                mount_point: "{{ mount_location }}"

    - include_tasks: verify-role-results.yml

    - name: Repeat the previous invocation to verify idempotence
      include_role:
        name: linux-system-roles.storage
      vars:
        storage_pools:
          - name: pool1
            vdo_compression: true
            vdo_deduplication: true
            vdo_logical_size: "{{ logical_size }}"
            disks: "{{ unused_disks }}"
            volumes:
              - name: volume1
                size: "{{ volume_size }}"
                mount_point: "{{ mount_location }}"

    - include_tasks: verify-role-results.yml

    - name: Remove LVM VDO volume in 'pool1' created above
      include_role:
        name: linux-system-roles.storage
      vars:
        storage_pools:
          - name: pool1
            vdo_compression: true
            vdo_deduplication: true
            vdo_logical_size: "{{ logical_size }}"
            disks: "{{ unused_disks }}"
            state: "absent"
            volumes:
              - name: volume1
                size: "{{ volume_size }}"
                mount_point: "{{ mount_location }}"

    - include_tasks: verify-role-results.yml
