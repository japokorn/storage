---

#
# Some devices paths are returned as a symlinks. But we need their targets.
#
- name: (1/3) Process device path (set initial value)
  set_fact:
    storage_test_device_path: "{{ storage_test_volume._device }}"

- name: (2/3) Process device path (get device file info)
  stat:
    path: "{{ storage_test_volume._device }}"
  register: stat_output

- name: (3/3) Process device path (replace device with its target if it is a symlink)
  set_fact:
    storage_test_device_path: "{{ stat_output.stat.lnk_source }}"
  when: stat_output.stat.exists == true and stat_output.stat.mimetype == "inode/symlink" and storage_test_device_path not in storage_test_blkinfo.info

# type
- name: Verify fs type
  assert:
    that: "{{ storage_test_blkinfo.info[storage_test_device_path].fstype == storage_test_volume.fs_type }}"
  when: storage_test_volume.fs_type and _storage_test_volume_present

# label
- name: Verify fs label
  assert:
    that: "{{ storage_test_blkinfo.info[storage_test_device_path].label == storage_test_volume.fs_label }}"
  when: _storage_test_volume_present
