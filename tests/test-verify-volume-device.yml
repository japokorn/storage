---

#
# Some devices paths are returned as a symlinks. But we need their targets.
#
- name: (1/3) Process device path (set initial value)
  set_fact:
    storage_test_device_path: "{{ storage_test_volume._device }}"

- name: (2/3) Process device path (get device file info)
  stat:
    path: "{{ storage_test_volume._device }}"
  register: stat_output

- name: (3/3) Process device path (replace device with its target if it is a symlink)
  set_fact:
    storage_test_device_path: "{{ stat_output.stat.lnk_source }}"
  when: stat_output.stat.exists == true and stat_output.stat.mimetype == "inode/symlink" and storage_test_device_path not in storage_test_blkinfo.info


# name/path
- name: See whether the device node is present
  stat:
    path: "{{ storage_test_device_path }}"
    follow: yes
  register: storage_test_dev

- name: Verify the presence/absence of the device node
  assert:
    that: "{{ storage_test_dev.stat.exists and storage_test_dev.stat.isblk
              if _storage_test_volume_present or storage_test_volume.type == 'disk'
              else
              not storage_test_dev.stat.exists }}"
    msg: "Incorrect device node presence for volume {{ storage_test_volume.name }}"

- name: Make sure we got info about this volume
  assert:
    that: "{{ storage_test_device_path in storage_test_blkinfo.info }}"
    msg: "Failed to gather info about volume '{{ storage_test_volume.name }}'"
  when: _storage_test_volume_present

- name: (1/2) Process volume type (set initial value)
  set_fact:
      st_volume_type: "{{ storage_test_volume.type }}"

- name: (2/2) Process volume type (get RAID value)
  set_fact:
      st_volume_type: "{{ storage_test_volume.raid_level }}"
  when: storage_test_volume.type == "raid"

- name: Verify the volume's device type
  assert:
    that: "{{ storage_test_blkinfo.info[storage_test_device_path].type == st_volume_type }}"
  when: _storage_test_volume_present

# disks
#   partition: ??
#   lvm: n/a
#   disk: identity
